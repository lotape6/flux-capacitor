name: Project Automation

on:
  issues:
    types: [opened, edited, reopened]
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  link-to-project:
    runs-on: ubuntu-latest
    if: github.actor == 'lotape6' || github.actor == 'copilot'
    steps:
      - name: Add to GitHub Project
        uses: actions/add-to-project@v1
        with:
          project-url: https://github.com/users/lotape6/projects/1
          github-token: ${{ secrets.PERSONAL_TOKEN }}

  update-copilot-status:
    runs-on: ubuntu-latest
    needs: link-to-project
    if: github.actor == 'lotape6' || github.actor == 'copilot'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up GitHub CLI
        uses: cli/gh-action@v2

      - name: Update status for Copilot assignments
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          # Get all issues and PRs assigned to copilot in the project
          gh issue list --assignee copilot --state all --json number,state,title \
            | jq -c '.[]' | while read item; do
              number=$(echo $item | jq -r .number)
              state=$(echo $item | jq -r .state)
              # Default status
              project_status="backlog"
              
              # Map state to project status
              if [[ "$state" == "OPEN" ]]; then
                # Check if it's a PR and if it's in review or in progress
                is_pr=$(gh pr view $number --json state --jq .state 2>/dev/null || echo "")
                if [[ "$is_pr" == "OPEN" ]]; then
                  # Check review state
                  reviews=$(gh pr view $number --json reviews --jq '.reviews[].state' 2>/dev/null || echo "")
                  if echo "$reviews" | grep -q "APPROVED"; then
                    project_status="in review"
                  else
                    project_status="in progress"
                  fi
                else
                  # Issue is open, pending review
                  project_status="in review"
                fi
              elif [[ "$state" == "MERGED" ]]; then
                project_status="done"
              elif [[ "$state" == "CLOSED" ]]; then
                project_status="backlog"
              fi
              
              # Set status field (replace FIELD_NAME with actual field)
              gh project item-edit 1 --id $number --field "Status" --value "$project_status" || true
            done