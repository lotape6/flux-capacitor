name: Basic Integration

'on':
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 6 * * *'  # Daily at 6:00 AM UTC

jobs:
  test-installation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check if relevant files changed
        id: check-files
        run: |
          # List changed files (PR or push)
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git fetch origin ${{ github.base_ref }}
            CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          else
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          fi

          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Check if any match the critical paths
          echo "$CHANGED_FILES" | grep -E '(^install\.sh$|^uninstall\.sh$|^install/|^config/)' && SHOULD_RUN=true || SHOULD_RUN=false
          echo "should-run=$SHOULD_RUN" >> $GITHUB_OUTPUT

      - name: Build and run Docker test
        if: steps.check-files.outputs.should-run == 'true'
        run: |
          echo "Relevant changes detected. Running test-installation job..."
          docker build -f test/Dockerfile.test -t mytools-test .
          docker run --rm mytools-test

      - name: Skip message
        if: steps.check-files.outputs.should-run != 'true'
        run: echo "No relevant file changes detected. Skipping test-installation."
  
  daily-status-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 50

      - name: Check for recent commits
        id: check-commits
        run: |
          RECENT_COMMITS=$(git log --since="24 hours ago" --oneline master)
          if [ -n "$RECENT_COMMITS" ]; then
            echo "Recent commits found:"
            echo "$RECENT_COMMITS"
            echo "has-commits=true" >> $GITHUB_OUTPUT
          else
            echo "No commits in the last 24 hours"
            echo "has-commits=false" >> $GITHUB_OUTPUT
          fi

      - name: Run tests if commits exist
        if: steps.check-commits.outputs.has-commits == 'true'
        run: |
          echo "Running tests due to recent commits..."
          docker build -f test/Dockerfile.test -t mytools-test .
          docker run --rm mytools-test