name: Basic Integration

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 6 * * *'  # Daily at 6:00 AM UTC

jobs:
  test-installation:
    runs-on: ubuntu-latest
    # Only run on PR or push events
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for accurate file change detection

      - name: Check for changed .sh files
        id: check-sh-files
        run: |
          chmod +x .github/scripts/check-changed-sh-files.sh
          RESULT=$(.github/scripts/check-changed-sh-files.sh "${{ github.event_name }}" "${{ github.base_ref }}" "${{ github.event.before }}")
          echo "$RESULT"
          HAS_SH_FILES=$(echo "$RESULT" | tail -n1)
          echo "has-sh-files=$HAS_SH_FILES" >> $GITHUB_OUTPUT

      - name: Build and run Docker test
        if: steps.check-sh-files.outputs.has-sh-files == 'true'
        run: |
          echo "Shell files changed. Running Docker test..."
          docker build -f test/Dockerfile.test -t mytools-test .
          docker run --rm mytools-test

      - name: Skip message
        if: steps.check-sh-files.outputs.has-sh-files != 'true'
        run: echo "No shell files were changed. Skipping Docker test."

  # Run daily check regardless of file changes
  daily-status-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 50

      - name: Check for recent commits
        id: check-commits
        run: |
          RECENT_COMMITS=$(git log --since="24 hours ago" --oneline master)
          if [ -n "$RECENT_COMMITS" ]; then
            echo "Recent commits found:"
            echo "$RECENT_COMMITS"
            echo "has-commits=true" >> $GITHUB_OUTPUT
          else
            echo "No commits in the last 24 hours"
            echo "has-commits=false" >> $GITHUB_OUTPUT
          fi

      - name: Run tests if commits exist
        if: steps.check-commits.outputs.has-commits == 'true'
        run: |
          echo "Running tests due to recent commits..."
          ./test/run.sh